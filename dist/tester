#!/usr/bin/env php
<?php

use ThomasNordahlDk\Tester\Runner\RunnerFactory;
use ThomasNordahlDk\Tester\Runner\Utility\CommandLineArguments;
use ThomasNordahlDk\Tester\Runner\FailedTestsException;
use ThomasNordahlDk\Tester\Runner\Configuration\ConfigurationFactory;

requireAutoloader();

try {
    runSuites($argv);
} catch (FailedTestsException $exception) {
    exit($exception->getMessage() . "\n");
}

exit(0);

/**
 * locates and loads autoloader
 *
 * @throws \RuntimeException if the autoload file can not be located
 */
function requireAutoloader(): void
{
    if (file_exists(__DIR__ . "/../vendor/autoload.php")) {
        require_once __DIR__ . "/../vendor/autoload.php";

        return;
    }

    $dir = __DIR__;
    $prev_dir = "";

    while ($dir != $prev_dir) {

        $prev_dir = $dir;
        $dir = dirname($dir);

        if (file_exists($dir . "/autoload.php")) {
            require_once $dir . "/autoload.php";

            return;
        }
    }

    throw new \RuntimeException("autoload.php not found!");
}

function runSuites(array $argv): void
{
    $options = new CommandLineArguments($argv);

    $config_factory = new ConfigurationFactory();

    $configuration = $config_factory->createFromCommandLineArguments($options);

    $factory = new RunnerFactory($configuration);

    $runner = $factory->create();

    $test_suites = getTestSuites($options->getValue("file") ?: "test.php");

    $runner->run($test_suites);
}
/**
 * @param string $file_name "string.php"
 *
 * @return \ThomasNordahlDk\Tester\TestSuite[]
 * @throws RuntimeException
 */
function getTestSuites(string $file_name = "test.php")
{
    if (file_exists($file_name)) {
        return require $file_name;
    }

    if (file_exists(getcwd() . "/{$file_name}")) {
        return require getcwd() . "/{$file_name}";
    }

    throw new \RuntimeException("File not found: {$file_name}");
}
